# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

update_fastlane

default_platform(:ios)

platform :ios do
  desc "Sanity checks to run on CI"
  lane :sanity_checks do
    swiftlint_strict
    unit_tests_full_plan
    unit_tests_regional
    ui_tests
  end

  desc "Build the app"
  lane :build do
    cocoapods
    gym(skip_package_ipa: true)
  end

  desc "Run the unit tests default plan"
  lane :unit_tests_full_plan do
    run_tests(
      testplan: "UnitTestsPlan",
      include_simulator_logs: true,
      slack_url: ENV['SLACK_WEB_HOOK_URL'],
      slack_channel: ENV['SLACK_CI_CHANNEL_NAME'],
      slack_only_on_failure: true
    )
  end

  desc "Run the regional unit tests"
  lane :unit_tests_regional do
    run_tests(
      testplan: "RegionalTestsPlan",
      include_simulator_logs: true,
      slack_url: ENV['SLACK_WEB_HOOK_URL'],
      slack_channel: ENV['SLACK_CI_CHANNEL_NAME'],
      slack_only_on_failure: true
    )
  end

  desc "Run the UI tests"
  lane :ui_tests do
    run_tests(
      testplan: "UITestsPlan",
      include_simulator_logs: true,
      slack_url: ENV['SLACK_WEB_HOOK_URL'],
      slack_channel: ENV['SLACK_CI_CHANNEL_NAME'],
      slack_only_on_failure: true
    )
  end

  desc "Run swiftlint in strict mode"
  lane :swiftlint_strict do
    swiftlint(strict: true)
  end 

  desc "Upload to testflight"
  lane :distribute_to_testflight do
    app_store_connect_api_key(
      is_key_content_base64: true
    )
    if is_ci
      setup_ci
    end
    sync_certs
    bundle_install
    cocoapods
    increment_build_number(
      build_number: latest_testflight_build_number(
        username: ENV['APPLE_ID_USERNAME'],
        app_identifier: "mdb.SwiftyPick"
      ) + 1
    )
    build_app(
      export_options: {
        provisioningProfiles: { 
          "mdb.SwiftyPick" => "SwiftyPick AppStore"
        }
      }
    )
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: changelog_from_git_commits(
        commits_count: 5,
        pretty: "- %s",
        merge_commit_filtering: "exclude_merges"
      )
    )
  end

  desc "Sync certificates from private repo"
  lane :sync_certs do
    match(
      git_branch: "main",
      type: "appstore",
      profile_name: "SwiftyPick AppStore",
      app_identifier: "mdb.SwiftyPick"
    )
  
    match(
      git_branch: "main",
      type: "development",
      profile_name: "SwiftyPick Development",
      app_identifier: "mdb.SwiftyPick"
    )
  end

end
